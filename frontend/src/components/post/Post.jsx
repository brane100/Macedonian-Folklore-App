import { useState } from 'react';
import api from '../../services/api';
import { useNavigate } from 'react-router-dom';
import './Post.css';

function Prispevek(props) {
    const initialState = {
        ime_plesa: '',
        tip_plesa: '',
        kratka_zgodovina: '',
        opis_tehnike: '',
        besedilo_opis: '',
        je_anonimen: false,
        regija: '',
    };

    const [state, setState] = useState(initialState);
    const [loading, setLoading] = useState(false);
    const [message, setMessage] = useState('');
    const navigate = useNavigate();

    const regije = [
        '–°–∫–æ–ø—Å–∫–∏ —Ä–µ–≥–∏–æ–Ω',
        '–ü–µ–ª–∞–≥–æ–Ω–∏—Å–∫–∏ —Ä–µ–≥–∏–æ–Ω', 
        '–ò—Å—Ç–æ—á–µ–Ω —Ä–µ–≥–∏–æ–Ω',
        '–à—É–≥–æ–∏—Å—Ç–æ—á–µ–Ω —Ä–µ–≥–∏–æ–Ω',
        '–à—É–≥–æ–∑–∞–ø–∞–¥–µ–Ω —Ä–µ–≥–∏–æ–Ω',
        '–í–∞—Ä–¥–∞—Ä—Å–∫–∏ —Ä–µ–≥–∏–æ–Ω',
        '–°–µ–≤–µ—Ä–æ–∏—Å—Ç–æ—á–µ–Ω —Ä–µ–≥–∏–æ–Ω',
        '–ü–æ–ª–æ—à–∫–∏ —Ä–µ–≥–∏–æ–Ω'
    ];

    const tipoviPlesa = [
        '–û—Ä–æ',
        '–ñ–µ–Ω—Å–∫–æ –æ—Ä–æ',
        '–ú–∞—à–∫–æ –æ—Ä–æ',
        '–°–æ–±–æ—Ä–Ω–æ –æ—Ä–æ',
    ];

    const onInputChange = (event) => {
        const { target: { name, value, type, checked } } = event;
        setState(prevState => ({ 
            ...prevState, 
            [name]: type === 'checkbox' ? checked : value 
        }));
    };

    const onFileChange = (event) => {
        const { target: { name, files } } = event;
        setState(prevState => ({ 
            ...prevState, 
            [name]: files[0] || null 
        }));
    };

    const createPrispevek = async () => {
        setLoading(true);
        setMessage('');

        try {
            const formData = new FormData();
            
            // Add all form fields to FormData
            Object.keys(state).forEach(key => {
                if (state[key] !== null && state[key] !== '') {
                    if (key === 'slika' || key === 'posnetek' || key === 'dokument') {
                        if (state[key]) {
                            formData.append(key, state[key]);
                        }
                    } else {
                        formData.append(key, state[key]);
                    }
                }
            });

            const response = await api.post('/prispevki', formData, {
                withCredentials: true,
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            });

            if (response.data.success) {
                setMessage('‚úÖ –ü—Äispev–æ–∫–æ—Ç –µ —É—Å–ø–µ—à–Ω–æ –¥–æ–¥–∞–¥–µ–Ω!');
                // Reset form after successful submission
                setState(initialState);
                // Reset file inputs
                const fileInputs = document.querySelectorAll('input[type="file"]');
                fileInputs.forEach(input => input.value = '');
                
                // Navigate to success page after 2 seconds
                setTimeout(() => {
                    navigate('/prispevki');
                }, 2000);
            }
        } catch (err) {
            console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞—ö–µ –Ω–∞ –ø—Äispevok:', err);
            setMessage(`‚ùå –ì—Ä–µ—à–∫–∞: ${err.response?.data?.msg || '–ù–µ –º–æ–∂–µ–≤ –¥–∞ –≥–æ –¥–æ–¥–∞–¥–∞–º –ø—Äispev–æ–∫–æ—Ç'}`);
        } finally {
            setLoading(false);
        }
    };

    const isFormValid = () => {
        return state.ime_plesa && 
               state.tip_plesa && 
               state.kratka_zgodovina && 
               state.opis_tehnike && 
               state.besedilo_opis && 
               state.regija;
    };

    return (
        <div className='create-prispevek'>
            <div className='prispevek-container'>
                <div className='prispevek-header'>
                    <h1>üèõÔ∏è –î–æ–¥–∞—ò –Ω–æ–≤ –ø—Äispev–æ–∫ –∑–∞ –º–∞–∫–µ–¥–æ–Ω—Å–∫–∏ —Ñ–æ–ª–∫–ª–æ—Ä</h1>
                    <p>–°–ø–æ–¥–µ–ª–µ—Ç–µ —ò–∞ –≤–∞—à–∞—Ç–∞ —ô—É–±–æ–≤ –∫–æ–Ω –º–∞–∫–µ–¥–æ–Ω—Å–∫–∞—Ç–∞ —Ç—Ä–∞–¥–∏—Ü–∏—ò–∞</p>
                </div>

                <div className='prispevek-form'>
                    {/* –ò–º–µ –Ω–∞ –ø–ª–µ—Å–æ—Ç */}
                    <div className='form-group'>
                        <label htmlFor="ime_plesa">
                            üé≠ –ò–º–µ –Ω–∞ –ø–ª–µ—Å–æ—Ç/—Ç—Ä–∞–¥–∏—Ü–∏—ò–∞—Ç–∞ *
                        </label>
                        <input 
                            id="ime_plesa"
                            name="ime_plesa"
                            type='text' 
                            placeholder='–Ω–∞ –ø—Ä. –¢–µ—à–∫–æ—Ç–æ' 
                            value={state.ime_plesa}
                            onChange={onInputChange}
                            required
                        />
                    </div>

                    {/* –¢–∏–ø –Ω–∞ –ø–ª–µ—Å */}
                    <div className='form-group'>
                        <label htmlFor="tip_plesa">
                            üé™ –¢–∏–ø –Ω–∞ –ø–ª–µ—Å/—Ç—Ä–∞–¥–∏—Ü–∏—ò–∞ *
                        </label>
                        <select
                            id="tip_plesa"
                            name="tip_plesa"
                            value={state.tip_plesa}
                            onChange={onInputChange}
                            required
                        >
                            <option value="">–ò–∑–±–µ—Ä–µ—Ç–µ —Ç–∏–ø</option>
                            {tipoviPlesa.map(tip => (
                                <option key={tip} value={tip}>{tip}</option>
                            ))}
                        </select>
                    </div>

                    {/* –†–µ–≥–∏—ò–∞ */}
                    <div className='form-group'>
                        <label htmlFor="regija">
                            üó∫Ô∏è –†–µ–≥–∏—ò–∞ *
                        </label>
                        <select
                            id="regija"
                            name="regija"
                            value={state.regija}
                            onChange={onInputChange}
                            required
                        >
                            <option value="">–ò–∑–±–µ—Ä–µ—Ç–µ —Ä–µ–≥–∏—ò–∞</option>
                            {regije.map(regija => (
                                <option key={regija} value={regija}>{regija}</option>
                            ))}
                        </select>
                    </div>

                    {/* –ö—Ä–∞—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏—ò–∞ */}
                    <div className='form-group'>
                        <label htmlFor="kratka_zgodovina">
                            üìú –ö—Ä–∞—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏—ò–∞ *
                        </label>
                        <textarea 
                            id="kratka_zgodovina"
                            name="kratka_zgodovina"
                            placeholder='–û–ø–∏—à–µ—Ç–µ –≥–æ –ø–æ—Ç–µ–∫–ª–æ—Ç–æ –∏ –∏—Å—Ç–æ—Ä–∏—ò–∞—Ç–∞ –Ω–∞ –æ–≤–∞–∞ —Ç—Ä–∞–¥–∏—Ü–∏—ò–∞...'
                            value={state.kratka_zgodovina}
                            onChange={onInputChange}
                            rows="4"
                            required
                        />
                    </div>

                    {/* –û–ø–∏—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞ */}
                    <div className='form-group'>
                        <label htmlFor="opis_tehnike">
                            üíÉ –û–ø–∏—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞ *
                        </label>
                        <textarea 
                            id="opis_tehnike"
                            name="opis_tehnike"
                            placeholder='–û–ø–∏—à–µ—Ç–µ –≥–∏ —á–µ–∫–æ—Ä–∏—Ç–µ, –¥–≤–∏–∂–µ—ö–∞—Ç–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–∏—Ç–µ...'
                            value={state.opis_tehnike}
                            onChange={onInputChange}
                            rows="4"
                            required
                        />
                    </div>

                    {/* –î–µ—Ç–∞–ª–µ–Ω –æ–ø–∏—Å */}
                    <div className='form-group'>
                        <label htmlFor="besedilo_opis">
                            üìù –î–µ—Ç–∞–ª–µ–Ω –æ–ø–∏—Å *
                        </label>
                        <textarea 
                            id="besedilo_opis"
                            name="besedilo_opis"
                            placeholder='–î–æ–¥–∞—ò—Ç–µ –¥–µ—Ç–∞–ª–µ–Ω –æ–ø–∏—Å, –∑–Ω–∞—á–µ—ö–µ, –∫–æ–≥–∞ —Å–µ –∏–≥—Ä–∞, —Å–ø–µ—Ü–∏—ò–∞–ª–Ω–∏ –ø—Ä–∏–ª–∏–∫–∏...'
                            value={state.besedilo_opis}
                            onChange={onInputChange}
                            rows="6"
                            required
                        />
                    </div>

                    {/* File uploads */}
                    <div className="file-upload-section">
                        <h3>üìé –î–æ–¥–∞—Ç–Ω–∏ –º–∞—Ç–µ—Ä–∏—ò–∞–ª–∏</h3>
                        
                        {/* –°–ª–∏–∫–∞ */}
                        <div className='form-group'>
                            <label htmlFor="slika">
                                üñºÔ∏è –°–ª–∏–∫–∞
                            </label>
                            <input
                                id="slika"
                                name="slika"
                                type="file"
                                accept="image/*"
                                onChange={onFileChange}
                                className="file-input"
                            />
                            <small>–ü–æ–¥–¥—Ä–∂–∞–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∏: JPG, PNG, GIF (–º–∞–∫—Å. 5MB)</small>
                        </div>

                        {/* –ü–æ—Å–Ω–µ—Ç–æ–∫ */}
                        <div className='form-group'>
                            <label htmlFor="posnetek">
                                üé• –í–∏–¥–µ–æ –ø–æ—Å–Ω–µ—Ç–æ–∫
                            </label>
                            <input
                                id="posnetek"
                                name="posnetek"
                                type="file"
                                accept="video/*"
                                onChange={onFileChange}
                                className="file-input"
                            />
                            <small>–ü–æ–¥–¥—Ä–∂–∞–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∏: MP4, AVI, MOV (–º–∞–∫—Å. 50MB)</small>
                        </div>

                        {/* –î–æ–∫—É–º–µ–Ω—Ç */}
                        <div className='form-group'>
                            <label htmlFor="dokument">
                                üìÑ –î–æ–∫—É–º–µ–Ω—Ç
                            </label>
                            <input
                                id="dokument"
                                name="dokument"
                                type="file"
                                accept=".pdf,.doc,.docx,.txt"
                                onChange={onFileChange}
                                className="file-input"
                            />
                            <small>–ü–æ–¥–¥—Ä–∂–∞–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∏: PDF, DOC, DOCX, TXT (–º–∞–∫—Å. 10MB)</small>
                        </div>
                    </div>

                    {/* –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç */}
                    <div className='form-group checkbox-group'>
                        <label className="checkbox-label">
                            <input
                                name="je_anonimen"
                                type="checkbox"
                                checked={state.je_anonimen}
                                onChange={onInputChange}
                            />
                            <span className="checkmark"></span>
                            üï∂Ô∏è –°–∞–∫–∞–º –æ–≤–æ—ò –ø—Äispev–æ–∫ –¥–∞ –±–∏–¥–µ –∞–Ω–æ–Ω–∏–º–µ–Ω
                        </label>
                    </div>

                    {/* Message */}
                    {message && (
                        <div className={`message ${message.includes('‚úÖ') ? 'success' : 'error'}`}>
                            {message}
                        </div>
                    )}

                    {/* Submit button */}
                    <div className="form-actions">
                        <button 
                            onClick={createPrispevek}
                            className="submit-btn"
                            disabled={loading || !isFormValid()}
                        >
                            {loading ? (
                                <>
                                    <span className="loading-spinner"></span>
                                    –°–µ –¥–æ–¥–∞–≤–∞...
                                </>
                            ) : (
                                <>
                                    üé≠ –î–æ–¥–∞—ò –ø—Äispev–æ–∫
                                </>
                            )}
                        </button>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Prispevek;