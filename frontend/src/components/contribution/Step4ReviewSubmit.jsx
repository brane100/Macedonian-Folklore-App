import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './Step4ReviewSubmit.css';

export default function Step4ReviewSubmit({ formData, prevStep }) {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSubmitted, setIsSubmitted] = useState(false);
  const navigate = useNavigate();

  const handleSubmit = async () => {
    setIsSubmitting(true);
    console.log('Submitting:', formData);

    // Map region ID to region data
    const getRegionData = (regijaId) => {
      const regionMap = {
        "1": { ime: "–ü–µ–ª–∞–≥–æ–Ω–∏—ò–∞", koordinata_x: 21.4, koordinata_y: 41.0 },
        "2": { ime: "–°–∫–æ–ø—ò–µ", koordinata_x: 21.4, koordinata_y: 42.0 },
        "3": { ime: "–í–∞—Ä–¥–∞—Ä—Å–∫–∞ –ú–∞–∫–µ–¥–æ–Ω–∏—ò–∞", koordinata_x: 21.6, koordinata_y: 41.6 },
        "4": { ime: "–ò—Å—Ç–æ—á–Ω–∞ –ú–∞–∫–µ–¥–æ–Ω–∏—ò–∞", koordinata_x: 22.4, koordinata_y: 41.8 },
        "5": { ime: "–Æ–≥–æ–∑–∞–ø–∞–¥–µ–Ω –¥–µ–ª", koordinata_x: 20.8, koordinata_y: 41.2 },
        "6": { ime: "–Æ–≥–æ–∏—Å—Ç–æ—á–µ–Ω –¥–µ–ª", koordinata_x: 22.0, koordinata_y: 41.2 },
        "7": { ime: "–ü–æ–ª–æ–≥", koordinata_x: 20.9, koordinata_y: 42.0 },
        "8": { ime: "–°–µ–≤–µ—Ä–æ–∏—Å—Ç–æ—á–µ–Ω –¥–µ–ª", koordinata_x: 22.2, koordinata_y: 42.2 }
      };
      return regionMap[regijaId] || { ime: "–ù–µ–ø–æ–∑–Ω–∞—Ç–∞ —Ä–µ–≥–∏—ò–∞", koordinata_x: 0, koordinata_y: 0 };
    };

    // Validate required fields from Step 1
    const requiredFields = {
      '–ò–º–µ –Ω–∞ –ø–ª–µ—Å': formData.novPlesIme,
      '–¢–∏–ø –Ω–∞ –ø–ª–µ—Å': formData.tipPlesa,
      '–†–µ–≥–∏—ò–∞': formData.regijaId,
      '–û–ø–∏—Å': formData.opis,
      '–ö—Ä–∞—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏—ò–∞': formData.kratkaZgodovina,
      '–û–ø–∏—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞—Ç–∞': formData.opisTehnike
    };

    const missingFields = Object.entries(requiredFields)
      .filter(([key, value]) => !value || value.trim() === '')
      .map(([key]) => key);

    if (missingFields.length > 0) {
      alert(`‚ùå –í–µ –º–æ–ª–∏–º–µ –ø–æ–ø–æ–ª–Ω–µ—Ç–µ –≥–∏ —Å–ª–µ–¥–Ω–∏—Ç–µ –∑–∞–¥–æ–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–æ–ª–∏—ö–∞:\n‚Ä¢ ${missingFields.join('\n‚Ä¢ ')}`);
      setIsSubmitting(false);
      return;
    }

    const regionData = getRegionData(formData.regijaId);

    // Test session before actual submission
    console.log('Testing session...');
    try {
      const sessionTest = await fetch('http://localhost:3001/prispevki/test-session', {
        method: 'GET',
        credentials: 'include'
      });
      const sessionData = await sessionTest.json();
      console.log('Session test result:', sessionData);
    } catch (error) {
      console.error('Session test failed:', error);
    }

    try {
      const response = await fetch('http://localhost:3001/prispevki/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include', // Include session cookies
        body: JSON.stringify({
          regija: {
            ime: regionData.ime,
            koordinata_x: regionData.koordinata_x,
            koordinata_y: regionData.koordinata_y
          },
          ples: {
            ime: formData.novPlesIme,
            tip_plesa: formData.tipPlesa,
            kratka_zgodovina: formData.kratkaZgodovina,
            opis_tehnike: formData.opisTehnike
          },
          prispevek: {
            opis: formData.opis,
            je_anonimen: formData.jeAnonimen,
            referenca_opis: formData.referencaOpis,
            referenca_url: formData.referencaUrl
          }
        })
      });

      const result = await response.json();

      if (response.ok && result.success) {
        setIsSubmitted(true);
        alert("üéâ " + result.msg);
        console.log('Contribution submitted successfully:', result.data);

        // Redirect to homepage after 500 milliseconds
        setTimeout(() => {
          navigate('/');
        }, 500);
      } else {
        throw new Error(result.msg || '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–∞—ú–∞—ö–µ –Ω–∞ –æ–±—ò–∞–≤–∞');
      }

    } catch (error) {
      console.error('Error submitting contribution:', error);
      alert("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–∞—ú–∞—ö–µ: " + error.message);
    } finally {
      setIsSubmitting(false);
    }
  };

  const getMediaIcon = (type) => {
    switch (type) {
      case 'image': return 'üñºÔ∏è';
      case 'video': return 'üé•';
      case 'audio': return 'üéµ';
      case 'document': return 'üìÑ';
      default: return 'üìé';
    }
  };

  const getRegionName = (regijaId) => {
    const regionMap = {
      "1": "–ü–µ–ª–∞–≥–æ–Ω–∏—ò–∞",
      "2": "–°–∫–æ–ø—ò–µ",
      "3": "–í–∞—Ä–¥–∞—Ä—Å–∫–∞ –ú–∞–∫–µ–¥–æ–Ω–∏—ò–∞",
      "4": "–ò—Å—Ç–æ—á–Ω–∞ –ú–∞–∫–µ–¥–æ–Ω–∏—ò–∞",
      "5": "–à—É–≥–æ–∑–∞–ø–∞–¥–µ–Ω –¥–µ–ª",
      "6": "–à—É–≥–æ–∏—Å—Ç–æ—á–µ–Ω –¥–µ–ª",
      "7": "–ü–æ–ª–æ–≥",
      "8": "–°–µ–≤–µ—Ä–æ–∏—Å—Ç–æ—á–µ–Ω –¥–µ–ª"
    };
    return regionMap[regijaId] || '–ù–µ–ø–æ–∑–Ω–∞—Ç–∞ —Ä–µ–≥–∏—ò–∞';
  };

  return (
    <div className={`step4-container ${isSubmitting ? 'submitting' : ''}`}>
      <div className="step4-header">
        <h2>üìã –ö–æ—Ä–∞–∫ 4: –ü—Ä–µ–≥–ª–µ–¥ –∏ –ø–æ—Ç–≤—Ä–¥—É–≤–∞—ö–µ</h2>
        <p className="subtitle">–ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –≥–∏ –≤–∞—à–∏—Ç–µ –ø–æ–¥–∞—Ç–æ—Ü–∏ –ø—Ä–µ–¥ –¥–∞ –≥–∏ –∏—Å–ø—Ä–∞—Ç–∏—Ç–µ</p>
      </div>

      {isSubmitted && (
        <div className="success-message">
          <span className="success-icon">üéâ</span>
          –í–∞—à–∏–æ—Ç –ø—Äispevok –µ —É—Å–ø–µ—à–Ω–æ –¥–æ–¥–∞–¥–µ–Ω –≤–æ –±–∞–∑–∞—Ç–∞ –Ω–∞ –º–∞–∫–µ–¥–æ–Ω—Å–∫–∏ —Ñ–æ–ª–∫–ª–æ—Ä!
        </div>
      )}

      <div className="review-section">
        {/* Basic Information */}
        <div className="review-card">
          <div className="review-item">
            <span className="review-label">üìñ –ò–º–µ –Ω–∞ –ø–ª–µ—Å:</span>
            <span className="review-value highlight">{formData.novPlesIme || '–ù–µ –µ –Ω–∞–≤–µ–¥–µ–Ω–æ'}</span>
          </div>

          <div className="review-item">
            <span className="review-label">üé™ –¢–∏–ø –Ω–∞ –ø–ª–µ—Å:</span>
            <span className="review-value">{formData.tipPlesa || '–ù–µ –µ –∏–∑–±—Ä–∞–Ω'}</span>
          </div>

          <div className="review-item">
            <span className="review-label">üìú –ö—Ä–∞—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏—ò–∞:</span>
            <span className="review-value long-text">{formData.kratkaZgodovina || '–ù–µ–º–∞ –æ–ø–∏—Å'}</span>
          </div>

          <div className="review-item">
            <span className="review-label">üéØ –û–ø–∏—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞:</span>
            <span className="review-value long-text">{formData.opisTehnike || '–ù–µ–º–∞ –æ–ø–∏—Å'}</span>
          </div>

          <div className="review-item">
            <span className="review-label">üìù –û–ø–∏—Å:</span>
            <span className="review-value long-text">{formData.opis || '–ù–µ–º–∞ –æ–ø–∏—Å'}</span>
          </div>

          <div className="review-item">
            <span className="review-label">üï∂Ô∏è –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç:</span>
            <span className={`review-value ${formData.jeAnonimen ? 'highlight' : ''}`}>
              {formData.jeAnonimen ? "‚úÖ –î–∞, –∞–Ω–æ–Ω–∏–º–µ–Ω –ø—Äispevok" : "‚ùå –ù–µ, —Å–æ –º–æ–µ –∏–º–µ"}
            </span>
          </div>

          <div className="review-item">
            <span className="review-label">üó∫Ô∏è –†–µ–≥–∏—ò–∞:</span>
            <span className="review-value highlight">
              {getRegionName(formData.regijaId)}
            </span>
          </div>

          <div className="review-item">
            <span className="review-label">üé≠ –ü–ª–µ—Å/–¢—Ä–∞–¥–∏—Ü–∏—ò–∞:</span>
            <span className="review-value highlight">
              {formData.plesId || `üÜï –ù–æ–≤: ${formData.novPlesIme || '–ù–µ –µ –Ω–∞–≤–µ–¥–µ–Ω–æ'}`}
            </span>
          </div>
        </div>

        {/* Summary Statistics */}
        <div className="summary-stats">
          <div className="stat-item">
            <span className="stat-number">{formData.media?.length || 0}</span>
            <span className="stat-label">–ú–µ–¥–∏—É–º–∏</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{formData.opis?.length || 0}</span>
            <span className="stat-label">–ö–∞—Ä–∞–∫—Ç–µ—Ä–∏</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{formData.jeAnonimen ? 'üï∂Ô∏è' : 'üë§'}</span>
            <span className="stat-label">–†–µ–∂–∏–º</span>
          </div>
        </div>

        {/* Media Section */}
        <div className="media-section">
          <h4>üìé –î–æ–¥–∞–¥–µ–Ω–∏ –º–µ–¥–∏—É–º–∏ ({formData.media?.length || 0})</h4>
          {formData.media && formData.media.length > 0 ? (
            <div className="media-list">
              {formData.media.map((m, index) => (
                <div key={index} className="media-item">
                  <div className="media-icon">{getMediaIcon(m.type)}</div>
                  <div className="media-details">
                    <div className="media-type">{m.type}</div>
                    <div className="media-url">{m.url}</div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div className="empty-media">
              üì≠ –ù–µ–º–∞ –¥–æ–¥–∞–¥–µ–Ω–∏ –º–µ–¥–∏—É–º–∏
            </div>
          )}
        </div>

        {/* References */}
        <div className="review-card">
          <div className="review-item">
            <span className="review-label">üìÑ –†–µ—Ñ–µ—Ä–µ–Ω—Ü–∞:</span>
            <span className="review-value long-text">
              {formData.referencaOpis || '–ù–µ–º–∞ –æ–ø–∏—Å –Ω–∞ —Ä–µ—Ñ–µ—Ä–µ–Ω—Ü–∞'}
            </span>
          </div>

          <div className="review-item">
            <span className="review-label">üîó URL:</span>
            <span className="review-value">
              {formData.referencaUrl ? (
                <a href={formData.referencaUrl} target="_blank" rel="noopener noreferrer">
                  {formData.referencaUrl}
                </a>
              ) : (
                '–ù–µ–º–∞ URL'
              )}
            </span>
          </div>
        </div>
      </div>

      {/* Warning Notice */}
      <div className="warning-notice">
        <span className="warning-icon">‚ö†Ô∏è</span>
        <p>–í–µ –º–æ–ª–∏–º–µ –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –≥–∏ —Å–∏—Ç–µ –ø–æ–¥–∞—Ç–æ—Ü–∏ –ø—Ä–µ–¥ –¥–∞ –≥–∏ –∏—Å–ø—Ä–∞—Ç–∏—Ç–µ. –ü–æ –∏—Å–ø—Ä–∞—ú–∞—ö–µ—Ç–æ –Ω–µ–º–∞ –¥–∞ –º–æ–∂–µ—Ç–µ –¥–∞ –≥–∏ –º–µ–Ω—É–≤–∞—Ç–µ.</p>
      </div>

      {/* Action Buttons */}
      <div className="action-buttons">
        <button
          onClick={prevStep}
          className="btn btn-back"
          disabled={isSubmitting}
        >
          ‚¨ÖÔ∏è –ù–∞–∑–∞–¥
        </button>

        <button
          onClick={handleSubmit}
          className="btn btn-submit"
          disabled={isSubmitting || isSubmitted}
          style={{
            opacity: isSubmitting || isSubmitted ? 0.5 : 1,
            cursor: isSubmitting || isSubmitted ? 'not-allowed' : 'pointer'
          }}
        >
          {isSubmitting ? (
            <>
              <span className="loading-spinner"></span>
              –°–µ –∏—Å–ø—Ä–∞—ú–∞...
            </>
          ) : isSubmitted ? (
            <>
              ‚úÖ –ò—Å–ø—Ä–∞—Ç–µ–Ω–æ
            </>
          ) : (
            <>
              üöÄ –ò—Å–ø—Ä–∞—Ç–∏ –ø—Äispevok
            </>
          )}
        </button>
      </div>
    </div>
  );
}
